# PHP CircleCI 2.0 configuration file
# ref: https://gist.github.com/thijskok/58cd0139dc812a570812456f4c1f08d0
# Check https://circleci.com/docs/2.0/language-php/ for more details
#
version: 2
jobs:
  build:
    docker:
      # Specify the version you desire here
      - image: circleci/php:7.4-node-browsers
      # Mysql
      - image: circleci/mysql:8.0
        environment:
          MYSQL_ALLOW_EMPTY_PASSWORD: true
          MYSQL_DATABASE: mailnhanhtest
    steps:
      - run:
          name: Install System Dependencies
          command: |
                sudo apt-get update
                sudo apt-get install -y libzip-dev # PHP CircleCI 2.0 Configuration File# PHP CircleCI 2.0 Configuration File sudo apt install zlib1g-dev libsqlite3-dev
      - run:
            name: Install php extension
            command: sudo docker-php-ext-install pdo_mysql mysqli zip
      - run:
          name: Update Composer
          command: sudo composer self-update
      - checkout
      # Download and cache dependencies
      - restore_cache:
          keys:
            - composer-v1-{{ checksum "composer.lock" }}
            - composer-v1-
      - run:
          name: Install Composer Dependencies
          command: composer install -n --ignore-platform-reqs
      - save_cache:
          key: composer-v1-{{ checksum "composer.lock" }}
          paths:
            - vendor
      - run:
          name: Setup Environment
          command: |
            cp .env.example .env
      - run:
          name: "Generate App key"
          command: php artisan key:generate
      - restore_cache:
          keys:
            - node-v1-{{ checksum "package.json" }}
            - node-v1-
      - run:
          name: Install Node Dependencies
          command: |
            node --version
            npm --version
            npm install
      - save_cache:
          key: node-v1-{{ checksum "package.json" }}
          paths:
            - node_modules
      # # ESLint double check
      # - run:
      #     name: ESLint
      #     command: |
      #       mkdir -p ./logs/eslint
      #       node_modules/eslint/bin/eslint.js --ext .js,.vue -o logs/eslint/junit.xml -f junit resources/js
      # Unit Test
      - run:
          name: Run Unit Tests
          environment:
            DB_CONNECTION: mysql_test
          command: |
            mkdir -p ./logs/phpunit
            vendor/bin/phpunit -d memory_limit=512M --log-junit logs/phpunit/junit.xml --testdox-html logs/phpunit/testdox.html
      - store_artifacts:
          path: ./logs/eslint
          destination: eslint
      - store_artifacts:
          path: ./logs/phpunit/
          destination: phpunit